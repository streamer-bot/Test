[
    {
        "id": 1,
        "name": "Bein Premium 1",
        "logo": "https://i.imgur.com/UF4iLxf.png",
        "is_hide": 0,
        "priority": 0,
        "streams": [
            {
                "name": "4",
                "url": "https://x7.yacinetvkora.com/live/tw.m3u8?s=aHR0cHM6Ly9wcm9kLWZhc3RseS1ldS13ZXN0LTEudmlkZW8ucHNjcC50di9UcmFuc2NvZGluZy92MS9obHMvR1lGRkpGVzZXMFpaSkRsNUJyMGZCQjZab21nUTY4LURIdGxoWEVhU1V2R1dkUnBPa1FWUHRPTWFKSmd3bjVNMUtmYVFvbll6bHJtLUo3ZlNRU19UMkEvdHJhbnNjb2RlL2V1LXdlc3QtMS9wZXJpc2NvcGUtcmVwbGF5LWRpcmVjdC1wcm9kLWV1LXdlc3QtMS1wcml2YXRlL2V5SmhiR2NpT2lKSVV6STFOaUlzSW5SNWNDSTZJa3BYVkNJc0luWmxjbk5wYjI0aU9pSXlJbjAuZXlKRmJtTnZaR1Z5VTJWMGRHbHVaeUk2SW1WdVkyOWtaWEpmYzJWMGRHbHVaMTgzTWpCd016QmZNVEFpTENKSVpXbG5hSFFpT2pjeU1Dd2lTMkp3Y3lJNk1qYzFNQ3dpVjJsa2RHZ2lPakV5T0RCOS5sZGt0TTRmQ0ZSZmtQNFpFQmZaUEt0bEFVTkFjVFBrb3o5OTRZSkF6V3BFL3N0X2R5bmFtaWNfaGlnaGxhdGVuY3kubTN1OD90eXBlPWxpdmU=",
                "url_type": 1,
                "user_agent": "HDPlayer/3.5.47 (Linux;Android 12) ExoPlayerLib/2.14.1",
                "referer": ""
            },
            {
                "name": "Multi II",
                "url": "https://x7.yacinetvkora.com/live/tw.m3u8?s=aHR0cHM6Ly9wcm9kLWZhc3RseS1hcC1zb3V0aGVhc3QtMi52aWRlby5wc2NwLnR2L1RyYW5zY29kaW5nL3YxL2hscy9JdUpOalV1OTBvaTAzbnY5eVNqbjByR1FIdzVuR1ZENERCMWplUWJLelNlN09RWWFSLUY1ZWk5YkRFV01mN2QteGc0TW1LTnRReFAydDdqc0M3V1Z3Zy9ub25fdHJhbnNjb2RlL2FwLXNvdXRoZWFzdC0yL3BlcmlzY29wZS1yZXBsYXktZGlyZWN0LXByb2QtYXAtc291dGhlYXN0LTItcHJpdmF0ZS9zdF9tYXN0ZXJfZHluYW1pY19oaWdobGF0ZW5jeS5tM3U4P3R5cGU9bGl2ZQ==",
                "url_type": 1,
                "user_agent": "HDPlayer/3.5.47 (Linux;Android 12) ExoPlayerLib/2.14.1",
                "referer": ""
            },
            {
                "name": "Multi",
                "url": "https://x7.yacinetvkora.com/live/tw.m3u8?s=aHR0cHM6Ly9wcm9kLWZhc3RseS1hcC1ub3J0aGVhc3QtMS52aWRlby5wc2NwLnR2L1RyYW5zY29kaW5nL3YxL2hscy9Tc19rbmgwSmZXWUdIUFFEbzVzOEtjS1poV29UMnZkelJEQm5WWkFRQmVHM0xqcTZXcExMUXBuWTZvejJRR2Z0UERsMWtFaF9IT2xWaDZEdGJjMmtldy9ub25fdHJhbnNjb2RlL2FwLW5vcnRoZWFzdC0xL3BlcmlzY29wZS1yZXBsYXktZGlyZWN0LXByb2QtYXAtbm9ydGhlYXN0LTEtcHJpdmF0ZS9zdF9tYXN0ZXJfZHluYW1pY19oaWdobGF0ZW5jeS5tM3U4P3R5cGU9bGl2ZQ==",
                "url_type": 1,
                "user_agent": "HDPlayer/3.5.47 (Linux;Android 12) ExoPlayerLib/2.14.1",
                "referer": ""
            },
            {
                "name": "IPTV",
                "url": "http://www.tvxclnt.com:8080/tretvx2022/QP3J8nmeTvIZp82J/1292",
                "url_type": 20,
                "user_agent": "",
                "referer": "",
                "player": "vlc"
            }
        ]
    },
    {
        "id": 2,
        "name": "Bein Premium 2",
        "logo": "https://i.imgur.com/G2mgOIf.png",
        "is_hide": 0,
        "priority": 0,
        "streams": [
            {
                "name": "4",
                "url": "https://x7.yacinetvkora.com/live/tw.m3u8?s=aHR0cHM6Ly9wcm9kLWZhc3RseS11cy13ZXN0LTEudmlkZW8ucHNjcC50di9UcmFuc2NvZGluZy92MS9obHMvT0F3Vl83em5EbnRxZi1ZMnpFbC11bnN0dUdRSTRkaHd6bm9kU3JhQ1RZeTNINnktVTZSSzNmVDhzeWR4cThjQlRHWGh6ZGpZRlJKUmtHZEFvZWlQVHcvdHJhbnNjb2RlL3VzLXdlc3QtMS9wZXJpc2NvcGUtcmVwbGF5LWRpcmVjdC1wcm9kLXVzLXdlc3QtMS1wcml2YXRlL2V5SmhiR2NpT2lKSVV6STFOaUlzSW5SNWNDSTZJa3BYVkNJc0luWmxjbk5wYjI0aU9pSXlJbjAuZXlKRmJtTnZaR1Z5VTJWMGRHbHVaeUk2SW1WdVkyOWtaWEpmYzJWMGRHbHVaMTgzTWpCd016QmZNVEFpTENKSVpXbG5hSFFpT2pjeU1Dd2lTMkp3Y3lJNk1qYzFNQ3dpVjJsa2RHZ2lPakV5T0RCOS5sZGt0TTRmQ0ZSZmtQNFpFQmZaUEt0bEFVTkFjVFBrb3o5OTRZSkF6V3BFL3N0X2R5bmFtaWNfaGlnaGxhdGVuY3kubTN1OD90eXBlPWxpdmU=",
                "url_type": 1,
                "user_agent": "HDPlayer/3.5.47 (Linux;Android 12) ExoPlayerLib/2.14.1",
                "referer": ""
            },
            {
                "name": "Multi",
                "url": "https://x7.yacinetvkora.com/live/tw.m3u8?s=aHR0cHM6Ly9wcm9kLWZhc3RseS1ldS13ZXN0LTEudmlkZW8ucHNjcC50di9UcmFuc2NvZGluZy92MS9obHMvcjQ2Q1I3UFZRc25pUzJtcFZGbnlqdmI5OGFWdks5eTB5RVBiZVRVczBaU1J1YWpHQThaZVZUekR2RXJFYXpTVG9TSVNBTWJNWGVYb2JtM3hKS3JXMFEvbm9uX3RyYW5zY29kZS9ldS13ZXN0LTEvcGVyaXNjb3BlLXJlcGxheS1kaXJlY3QtcHJvZC1ldS13ZXN0LTEtcHJpdmF0ZS9zdF9tYXN0ZXJfZHluYW1pY19oaWdobGF0ZW5jeS5tM3U4P3R5cGU9bGl2ZQ==",
                "url_type": 1,
                "user_agent": "HDPlayer/3.5.47 (Linux;Android 12) ExoPlayerLib/2.14.1",
                "referer": ""
            },
            {
                "name": "Multi II",
                "url": "https://x7.yacinetvkora.com/live/tw.m3u8?s=aHR0cHM6Ly9wcm9kLWZhc3RseS1ldS13ZXN0LTMudmlkZW8ucHNjcC50di9UcmFuc2NvZGluZy92MS9obHMvMEhaRlNHS2Z3d1Y2bXBXTGdyamh4TmFldi1CTVNGbDBLZlJ6bWtFMUh1bFBYTnpTZlpuN1d6OG1lS09PanlQVnIyYndwSmg4WE40UjQwbUVIazFsc1Evbm9uX3RyYW5zY29kZS9ldS13ZXN0LTMvcGVyaXNjb3BlLXJlcGxheS1kaXJlY3QtcHJvZC1ldS13ZXN0LTMtcHJpdmF0ZS9zdF9tYXN0ZXJfZHluYW1pY19oaWdobGF0ZW5jeS5tM3U4P3R5cGU9bGl2ZQ==",
                "url_type": 1,
                "user_agent": "HDPlayer/3.5.47 (Linux;Android 12) ExoPlayerLib/2.14.1",
                "referer": ""
            },
            {
                "name": "IPTV",
                "url": "http://www.tvxclnt.com:8080/tretvx2022/QP3J8nmeTvIZp82J/2774",
                "url_type": 20,
                "user_agent": "",
                "referer": "",
                "player": "vlc"
            }
        ]
    },
    {
        "id": 3,
        "name": "Bein Premium 3",
        "logo": "https://i.imgur.com/Qps8HIv.png",
        "is_hide": 0,
        "priority": 0,
        "streams": [
            {
                "name": "4",
                "url": "https://x7.yacinetvkora.com/live/tw.m3u8?s=aHR0cHM6Ly9wcm9kLWZhc3RseS1zYS1lYXN0LTEudmlkZW8ucHNjcC50di9UcmFuc2NvZGluZy92MS9obHMvVEhIMmFtZTA1WVlHQlk0VWlZUFJpbE9zN2lsdmdYYzVrRThPSDRKMl9waXR2SVBpdkhlejBaZXJJQXJzSzZ1XzEycDZMQ0NFR3pzbVBEcFZTTzFWa1EvdHJhbnNjb2RlL3NhLWVhc3QtMS9wZXJpc2NvcGUtcmVwbGF5LWRpcmVjdC1wcm9kLXNhLWVhc3QtMS1wcml2YXRlL2V5SmhiR2NpT2lKSVV6STFOaUlzSW5SNWNDSTZJa3BYVkNJc0luWmxjbk5wYjI0aU9pSXlJbjAuZXlKRmJtTnZaR1Z5VTJWMGRHbHVaeUk2SW1WdVkyOWtaWEpmYzJWMGRHbHVaMTgzTWpCd016QmZNVEFpTENKSVpXbG5hSFFpT2pjeU1Dd2lTMkp3Y3lJNk1qYzFNQ3dpVjJsa2RHZ2lPakV5T0RCOS5sZGt0TTRmQ0ZSZmtQNFpFQmZaUEt0bEFVTkFjVFBrb3o5OTRZSkF6V3BFL3N0X2R5bmFtaWNfaGlnaGxhdGVuY3kubTN1OD90eXBlPWxpdmU=",
                "url_type": 1,
                "user_agent": "HDPlayer/3.5.47 (Linux;Android 12) ExoPlayerLib/2.14.1",
                "referer": ""
            },
            {
                "name": "Multi",
                "url": "https://x7.yacinetvkora.com/live/tw.m3u8?s=aHR0cHM6Ly9wcm9kLWZhc3RseS1ldS13ZXN0LTEudmlkZW8ucHNjcC50di9UcmFuc2NvZGluZy92MS9obHMvYi1MOVg1LWIzNS1IOGtoQWU2V1cxWUhvZjg5MG5nLUotenFWZkRnNG4wUDZ2WnRCb25CaTA3MXhqUHdKNjBMNlNKNENhN21aSkhZWUhLbHF4YTRrMUEvbm9uX3RyYW5zY29kZS9ldS13ZXN0LTEvcGVyaXNjb3BlLXJlcGxheS1kaXJlY3QtcHJvZC1ldS13ZXN0LTEtcHJpdmF0ZS9zdF9tYXN0ZXJfZHluYW1pY19oaWdobGF0ZW5jeS5tM3U4P3R5cGU9bGl2ZQ==",
                "url_type": 1,
                "user_agent": "HDPlayer/3.5.47 (Linux;Android 12) ExoPlayerLib/2.14.1",
                "referer": ""
            },
            {
                "name": "Multi II",
                "url": "https://x7.yacinetvkora.com/live/tw.m3u8?s=aHR0cHM6Ly9wcm9kLWZhc3RseS1hcC1ub3J0aGVhc3QtMi52aWRlby5wc2NwLnR2L1RyYW5zY29kaW5nL3YxL2hscy9KZWVCTHA5cHRVMXVNU1pFRVU2T05kMm5SU2FJSVFxRVlzYklRYjVhbnNRTFE2N04wd2ZwejdzWFA2elJpN3l5dmdvQy13bTI4SzZnRGJKQ2FGeUNyQS9ub25fdHJhbnNjb2RlL2FwLW5vcnRoZWFzdC0yL3BlcmlzY29wZS1yZXBsYXktZGlyZWN0LXByb2QtYXAtbm9ydGhlYXN0LTItcHJpdmF0ZS9zdF9tYXN0ZXJfZHluYW1pY19oaWdobGF0ZW5jeS5tM3U4P3R5cGU9bGl2ZQ==",
                "url_type": 1,
                "user_agent": "HDPlayer/3.5.47 (Linux;Android 12) ExoPlayerLib/2.14.1",
                "referer": ""
            },
            {
                "name": "IPTV",
                "url": "http://www.tvxclnt.com:8080/tretvx2022/QP3J8nmeTvIZp82J/2775",
                "url_type": 20,
                "user_agent": "",
                "referer": "",
                "player": "vlc"
            }
        ]
    },
    {
        "id": 4,
        "name": "Bein Sports 1",
        "logo": "https://i.imgur.com/yyur2NH.png",
        "is_hide": 0,
        "priority": 0,
        "streams": [
            {
                "name": "4",
                "url": "https://x7.yacinetvkora.com/live/tw.m3u8?s=aHR0cHM6Ly9wcm9kLWZhc3RseS11cy1lYXN0LTEudmlkZW8ucHNjcC50di9UcmFuc2NvZGluZy92MS9obHMvcFJ0emR2VUpzSG5ETDlIeGZaQ0FlS3JlQm41ak5uNEpvYWdKWThOeldyMG1xY2hnSkRSX3pfOTQ0NFNxalZET0RUNmhvU3pLd19FVTA3aXRwYmh1RUEvdHJhbnNjb2RlL3VzLWVhc3QtMS9wZXJpc2NvcGUtcmVwbGF5LWRpcmVjdC1wcm9kLXVzLWVhc3QtMS1wcml2YXRlL2V5SmhiR2NpT2lKSVV6STFOaUlzSW5SNWNDSTZJa3BYVkNJc0luWmxjbk5wYjI0aU9pSXlJbjAuZXlKRmJtTnZaR1Z5VTJWMGRHbHVaeUk2SW1WdVkyOWtaWEpmYzJWMGRHbHVaMTgzTWpCd016QmZNVEFpTENKSVpXbG5hSFFpT2pjeU1Dd2lTMkp3Y3lJNk1qYzFNQ3dpVjJsa2RHZ2lPakV5T0RCOS5sZGt0TTRmQ0ZSZmtQNFpFQmZaUEt0bEFVTkFjVFBrb3o5OTRZSkF6V3BFL3N0X2R5bmFtaWNfaGlnaGxhdGVuY3kubTN1OD90eXBlPWxpdmU=",
                "url_type": 1,
                "user_agent": "HDPlayer/3.5.47 (Linux;Android 12) ExoPlayerLib/2.14.1",
                "referer": ""
            },
            {
                "name": "Multi",
                "url": "https://x7.yacinetvkora.com/live/tw.m3u8?s=aHR0cHM6Ly9wcm9kLWZhc3RseS1ldS1jZW50cmFsLTEudmlkZW8ucHNjcC50di9UcmFuc2NvZGluZy92MS9obHMvbFpOaTFCNlg1Z0cwVUhmQjk0NWV4RXVrLU0zZ21fRDJ4ZEt1NkR0dXlQVmJGdE9lWTZIV1BTUFBHQXNkbmtuaWZ4NFZaNUhVQTJrSkhZeHhXZm5DeEEvbm9uX3RyYW5zY29kZS9ldS1jZW50cmFsLTEvcGVyaXNjb3BlLXJlcGxheS1kaXJlY3QtcHJvZC1ldS1jZW50cmFsLTEtcHJpdmF0ZS9zdF9tYXN0ZXJfZHluYW1pY19oaWdobGF0ZW5jeS5tM3U4P3R5cGU9bGl2ZQ==",
                "url_type": 1,
                "user_agent": "HDPlayer/3.5.47 (Linux;Android 12) ExoPlayerLib/2.14.1",
                "referer": ""
            },
            {
                "name": "Multi II",
                "url": "https://x7.yacinetvkora.com/live/tw.m3u8?s=aHR0cHM6Ly9wcm9kLWZhc3RseS1ldS13ZXN0LTMudmlkZW8ucHNjcC50di9UcmFuc2NvZGluZy92MS9obHMvdWc0bUxtOXVrdThBTHpJTG9tbXFOLXdlVnp0ckZIMjBQM05ydHh2d1J2aHkxSUFmVTN6T1QwdWhxeEtvZVZ5RERMYkV6QnpLb2FzZWhEeTlBMFJ1c0Evbm9uX3RyYW5zY29kZS9ldS13ZXN0LTMvcGVyaXNjb3BlLXJlcGxheS1kaXJlY3QtcHJvZC1ldS13ZXN0LTMtcHJpdmF0ZS9zdF9tYXN0ZXJfZHluYW1pY19oaWdobGF0ZW5jeS5tM3U4P3R5cGU9bGl2ZQ==",
                "url_type": 1,
                "user_agent": "HDPlayer/3.5.47 (Linux;Android 12) ExoPlayerLib/2.14.1",
                "referer": ""
            },
            {
                "name": "IPTV",
                "url": "http://www.tvxclnt.com:8080/tretvx2022/QP3J8nmeTvIZp82J/2766",
                "url_type": 20,
                "user_agent": "",
                "referer": "",
                "player": "vlc"
            }
        ]
    },
    {
        "id": 5,
        "name": "Bein Sports 2",
        "logo": "https://i.imgur.com/X4CroOq.png",
        "is_hide": 0,
        "priority": 0,
        "streams": [
            {
                "name": "4",
                "url": "https://x7.yacinetvkora.com/live/tw.m3u8?s=aHR0cHM6Ly9wcm9kLWZhc3RseS1ldS13ZXN0LTEudmlkZW8ucHNjcC50di9UcmFuc2NvZGluZy92MS9obHMvS2VCRmlKN0hSMy00c1pkSllTUUNFS0NnQnRRVmtWSy1uQUZIVkQ1RmtOWGRxNmFEeDJjQ2E2RnM4RnBxNk5zMS1LSGJ2R1o2MTJTMjFKV2IybFRKMGcvdHJhbnNjb2RlL2V1LXdlc3QtMS9wZXJpc2NvcGUtcmVwbGF5LWRpcmVjdC1wcm9kLWV1LXdlc3QtMS1wcml2YXRlL2V5SmhiR2NpT2lKSVV6STFOaUlzSW5SNWNDSTZJa3BYVkNJc0luWmxjbk5wYjI0aU9pSXlJbjAuZXlKRmJtTnZaR1Z5VTJWMGRHbHVaeUk2SW1WdVkyOWtaWEpmYzJWMGRHbHVaMTgzTWpCd016QmZNVEFpTENKSVpXbG5hSFFpT2pjeU1Dd2lTMkp3Y3lJNk1qYzFNQ3dpVjJsa2RHZ2lPakV5T0RCOS5sZGt0TTRmQ0ZSZmtQNFpFQmZaUEt0bEFVTkFjVFBrb3o5OTRZSkF6V3BFL3N0X2R5bmFtaWNfaGlnaGxhdGVuY3kubTN1OD90eXBlPWxpdmU=",
                "url_type": 1,
                "user_agent": "HDPlayer/3.5.47 (Linux;Android 12) ExoPlayerLib/2.14.1",
                "referer": ""
            },
            {
                "name": "Multi",
                "url": "https://x7.yacinetvkora.com/live/tw.m3u8?s=aHR0cHM6Ly9wcm9kLWZhc3RseS1ldS13ZXN0LTEudmlkZW8ucHNjcC50di9UcmFuc2NvZGluZy92MS9obHMvLXhjQnV4TXdNbGptamJrclpxV3VvUHFWYlBqTVVlb0hYbllCZy10dHloQzN2UjF0dk5PZ196a09wZzQ5R2JQbGFpZnpmbGR1SVhGNWJzUnM2Qmh5Y2cvbm9uX3RyYW5zY29kZS9ldS13ZXN0LTEvcGVyaXNjb3BlLXJlcGxheS1kaXJlY3QtcHJvZC1ldS13ZXN0LTEtcHJpdmF0ZS9zdF9tYXN0ZXJfZHluYW1pY19oaWdobGF0ZW5jeS5tM3U4P3R5cGU9bGl2ZQ==",
                "url_type": 1,
                "user_agent": "HDPlayer/3.5.47 (Linux;Android 12) ExoPlayerLib/2.14.1",
                "referer": ""
            },
            {
                "name": "Multi II",
                "url": "https://x7.yacinetvkora.com/live/tw.m3u8?s=aHR0cHM6Ly9wcm9kLWZhc3RseS1zYS1lYXN0LTEudmlkZW8ucHNjcC50di9UcmFuc2NvZGluZy92MS9obHMvQTBqaVY4dmJHOFNJb1RzbUVwRVdLNWc4MnNYeXQ1YUdNdUFJWVJOeElRMlF0X1NVVVlTdUxUV1pza3hlWUVPb0JCOEF5NHVLWjFPQUh5Nk9OVmtpbXcvbm9uX3RyYW5zY29kZS9zYS1lYXN0LTEvcGVyaXNjb3BlLXJlcGxheS1kaXJlY3QtcHJvZC1zYS1lYXN0LTEtcHJpdmF0ZS9zdF9tYXN0ZXJfZHluYW1pY19oaWdobGF0ZW5jeS5tM3U4P3R5cGU9bGl2ZQ==",
                "url_type": 1,
                "user_agent": "HDPlayer/3.5.47 (Linux;Android 12) ExoPlayerLib/2.14.1",
                "referer": ""
            },
            {
                "name": "IPTV",
                "url": "http://www.tvxclnt.com:8080/tretvx2022/QP3J8nmeTvIZp82J/2767",
                "url_type": 20,
                "user_agent": "",
                "referer": "",
                "player": "vlc"
            }
        ]
    },
    {
        "id": 6,
        "name": "Bein Sports 3",
        "logo": "https://i.imgur.com/1EcMRRP.png",
        "is_hide": 0,
        "priority": 0,
        "streams": [
            {
                "name": "4",
                "url": "https://x7.yacinetvkora.com/live/tw.m3u8?s=aHR0cHM6Ly9wcm9kLWZhc3RseS1ldS1jZW50cmFsLTEudmlkZW8ucHNjcC50di9UcmFuc2NvZGluZy92MS9obHMvbndjRlFZTjhuc1VjYy1QU0oydE1IUTlzR3hkNHdMODRxRWNWRHRzeVZVYktNSVpyWFRINU1yMGtZMVZScjdDRERZX3M2TnJtcUM3d2s2eU5TS3h5UEEvdHJhbnNjb2RlL2V1LWNlbnRyYWwtMS9wZXJpc2NvcGUtcmVwbGF5LWRpcmVjdC1wcm9kLWV1LWNlbnRyYWwtMS1wcml2YXRlL2V5SmhiR2NpT2lKSVV6STFOaUlzSW5SNWNDSTZJa3BYVkNJc0luWmxjbk5wYjI0aU9pSXlJbjAuZXlKRmJtTnZaR1Z5VTJWMGRHbHVaeUk2SW1WdVkyOWtaWEpmYzJWMGRHbHVaMTgzTWpCd016QmZNVEFpTENKSVpXbG5hSFFpT2pjeU1Dd2lTMkp3Y3lJNk1qYzFNQ3dpVjJsa2RHZ2lPakV5T0RCOS5sZGt0TTRmQ0ZSZmtQNFpFQmZaUEt0bEFVTkFjVFBrb3o5OTRZSkF6V3BFL3N0X2R5bmFtaWNfaGlnaGxhdGVuY3kubTN1OD90eXBlPWxpdmU=",
                "url_type": 1,
                "user_agent": "HDPlayer/3.5.47 (Linux;Android 12) ExoPlayerLib/2.14.1",
                "referer": ""
            },
            {
                "name": "Multi",
                "url": "https://x7.yacinetvkora.com/live/tw.m3u8?s=aHR0cHM6Ly9wcm9kLWZhc3RseS1ldS1jZW50cmFsLTEudmlkZW8ucHNjcC50di9UcmFuc2NvZGluZy92MS9obHMvbndjRlFZTjhuc1VjYy1QU0oydE1IUTlzR3hkNHdMODRxRWNWRHRzeVZVYktNSVpyWFRINU1yMGtZMVZScjdDRERZX3M2TnJtcUM3d2s2eU5TS3h5UEEvbm9uX3RyYW5zY29kZS9ldS1jZW50cmFsLTEvcGVyaXNjb3BlLXJlcGxheS1kaXJlY3QtcHJvZC1ldS1jZW50cmFsLTEtcHJpdmF0ZS9zdF9tYXN0ZXJfZHluYW1pY19oaWdobGF0ZW5jeS5tM3U4P3R5cGU9bGl2ZQ==",
                "url_type": 1,
                "user_agent": "HDPlayer/3.5.47 (Linux;Android 12) ExoPlayerLib/2.14.1",
                "referer": ""
            },
            {
                "name": "Multi II",
                "url": "https://x7.yacinetvkora.com/live/tw.m3u8?s=aHR0cHM6Ly9wcm9kLWZhc3RseS11cy13ZXN0LTEudmlkZW8ucHNjcC50di9UcmFuc2NvZGluZy92MS9obHMvaWl4NDhSaW9aelM2aDVsRUdJSWVBczB2WjZBRW41NHZsWWtaMS1LcTFjY2c4S3RKRzU3ZjFubHZNNVp6VVY2dFBzT1lLRkxNdDBlMmZUZGtMT0o0Wmcvbm9uX3RyYW5zY29kZS91cy13ZXN0LTEvcGVyaXNjb3BlLXJlcGxheS1kaXJlY3QtcHJvZC11cy13ZXN0LTEtcHJpdmF0ZS9zdF9tYXN0ZXJfZHluYW1pY19oaWdobGF0ZW5jeS5tM3U4P3R5cGU9bGl2ZQ==",
                "url_type": 1,
                "user_agent": "HDPlayer/3.5.47 (Linux;Android 12) ExoPlayerLib/2.14.1",
                "referer": ""
            },
            {
                "name": "IPTV",
                "url": "http://www.tvxclnt.com:8080/tretvx2022/QP3J8nmeTvIZp82J/2768",
                "url_type": 20,
                "user_agent": "",
                "referer": "",
                "player": "vlc"
            }
        ]
    },
    {
        "id": 7,
        "name": "Bein Sports 4",
        "logo": "https://i.imgur.com/zrE4Hc7.png",
        "is_hide": 0,
        "priority": 0,
        "streams": [
            {
                "name": "Multi",
                "url": "https://x7.yacinetvkora.com/live/tw.m3u8?s=aHR0cHM6Ly9wcm9kLWZhc3RseS1ldS13ZXN0LTMudmlkZW8ucHNjcC50di9UcmFuc2NvZGluZy92MS9obHMvUTJNVzh6VlhHM2VsazhrWFBRczNqZWRjOUN6dVhydjU4dXgwNnA4TUdNOG4tVzRhZUVWbXZ3d1dsZ3lxMF9PZkRxemtzekxFS0V4OUlyWkhfdUpTLXcvbm9uX3RyYW5zY29kZS9ldS13ZXN0LTMvcGVyaXNjb3BlLXJlcGxheS1kaXJlY3QtcHJvZC1ldS13ZXN0LTMtcHJpdmF0ZS9zdF9tYXN0ZXJfZHluYW1pY19oaWdobGF0ZW5jeS5tM3U4P3R5cGU9bGl2ZQ==",
                "url_type": 1,
                "user_agent": "HDPlayer/3.5.47 (Linux;Android 12) ExoPlayerLib/2.14.1",
                "referer": ""
            },
            {
                "name": "IPTV",
                "url": "http://www.tvxclnt.com:8080/tretvx2022/QP3J8nmeTvIZp82J/2769",
                "url_type": 20,
                "user_agent": "",
                "referer": "",
                "player": "vlc"
            }
        ]
    },
    {
        "id": 8,
        "name": "Bein Sports 5",
        "logo": "https://i.imgur.com/mYk0EtM.png",
        "is_hide": 0,
        "priority": 0,
        "streams": [
            {
                "name": "Multi",
                "url": "https://x7.yacinetvkora.com/live/tw.m3u8?s=aHR0cHM6Ly9wcm9kLWZhc3RseS1ldS13ZXN0LTEudmlkZW8ucHNjcC50di9UcmFuc2NvZGluZy92MS9obHMvRTRrZURZTWNxbThIRmlQaDQ0dmVULWthZzZuT0lFWHloQ25pbkt0REtCbl9yVG82M2tZaUJLMHJFNWZBVVMxQjE3cUEwcHI2elZFSXpsVjVsZzh0Wncvbm9uX3RyYW5zY29kZS91cy13ZXN0LTIvcGVyaXNjb3BlLXJlcGxheS1kaXJlY3QtbGl2ZS9zdF9tYXN0ZXJfZHluYW1pY19oaWdobGF0ZW5jeS5tM3U4P3R5cGU9bGl2ZQ==",
                "url_type": 1,
                "user_agent": "HDPlayer/3.5.47 (Linux;Android 12) ExoPlayerLib/2.14.1",
                "referer": ""
            },
            {
                "name": "IPTV",
                "url": "http://www.tvxclnt.com:8080/tretvx2022/QP3J8nmeTvIZp82J/2770",
                "url_type": 20,
                "user_agent": "",
                "referer": "",
                "player": "vlc"
            }
        ]
    },
    {
        "id": 9,
        "name": "Bein Sports 6",
        "logo": "https://i.imgur.com/gPsWoOf.png",
        "is_hide": 0,
        "priority": 0,
        "streams": [
            {
                "name": "Multi",
                "url": "https://x7.yacinetvkora.com/live/tw.m3u8?s=aHR0cHM6Ly9wcm9kLWZhc3RseS1ldS13ZXN0LTMudmlkZW8ucHNjcC50di9UcmFuc2NvZGluZy92MS9obHMvQUR6ZDhZS2ZrazZVOFQ3dF9ILXBLcGJLRmY0LWk3Q1VUOE9td2JTQ25GRGxDaGh2SjZEZGFSb1lVbm1aUWZwcDJkUmVNMi1weW5JR1JQd2U0OW8zbncvbm9uX3RyYW5zY29kZS9ldS13ZXN0LTMvcGVyaXNjb3BlLXJlcGxheS1kaXJlY3QtcHJvZC1ldS13ZXN0LTMtcHJpdmF0ZS9zdF9tYXN0ZXJfZHluYW1pY19oaWdobGF0ZW5jeS5tM3U4P3R5cGU9bGl2ZQ==",
                "url_type": 1,
                "user_agent": "HDPlayer/3.5.47 (Linux;Android 12) ExoPlayerLib/2.14.1",
                "referer": ""
            }
        ]
    },
    {
        "id": 10,
        "name": "Bein Sports 7",
        "logo": "https://i.imgur.com/RmzBlvw.png",
        "is_hide": 0,
        "priority": 0,
        "streams": [
            {
                "name": "Multi",
                "url": "https://x7.yacinetvkora.com/live/tw.m3u8?s=aHR0cHM6Ly9wcm9kLWZhc3RseS1ldS13ZXN0LTMudmlkZW8ucHNjcC50di9UcmFuc2NvZGluZy92MS9obHMvR1otY3NPMHJDbEtuTlFoN3EtZmc2SS03Y0dQM005UHV5OWJ3eGcwNGduQXd6amstMGFUeWkxTkwtdzBpdTZMbTVpc1lKUmJhM0F2MzhZLUk5LTlWdHcvbm9uX3RyYW5zY29kZS9ldS13ZXN0LTMvcGVyaXNjb3BlLXJlcGxheS1kaXJlY3QtcHJvZC1ldS13ZXN0LTMtcHJpdmF0ZS9zdF9tYXN0ZXJfZHluYW1pY19oaWdobGF0ZW5jeS5tM3U4P3R5cGU9bGl2ZQ==",
                "url_type": 1,
                "user_agent": "HDPlayer/3.5.47 (Linux;Android 12) ExoPlayerLib/2.14.1",
                "referer": ""
            }
        ]
    },
    {
        "id": 11,
        "name": "Bein XTRA 1",
        "logo": "https://i.imgur.com/oEAdZeV.png",
        "is_hide": 0,
        "priority": 0,
        "streams": [
            {
                "name": "Multi",
                "url": "https://x7.yacinetvkora.com/live/tw.m3u8?s=aHR0cHM6Ly9wcm9kLWZhc3RseS1ldS13ZXN0LTMudmlkZW8ucHNjcC50di9UcmFuc2NvZGluZy92MS9obHMvRHM2LU1DM19RWDhpYzFhY1R6bTA0MVE1WDE3amk4WHo4YWZEZ2E3SXlTdXdOdWUxV29TN0lxeS12aDJwZDhyanBXbkRZZk9Yc25LamR2M3RmellORWcvbm9uX3RyYW5zY29kZS9ldS13ZXN0LTMvcGVyaXNjb3BlLXJlcGxheS1kaXJlY3QtcHJvZC1ldS13ZXN0LTMtcHJpdmF0ZS9zdF9tYXN0ZXJfZHluYW1pY19oaWdobGF0ZW5jeS5tM3U4P3R5cGU9bGl2ZQ==",
                "url_type": 1,
                "user_agent": "HDPlayer/3.5.47 (Linux;Android 12) ExoPlayerLib/2.14.1",
                "referer": ""
            },
            {
                "name": "Multi II",
                "url": "https://x7.yacinetvkora.com/live/tw.m3u8?s=aHR0cHM6Ly9wcm9kLWZhc3RseS1hcC1zb3V0aGVhc3QtMi52aWRlby5wc2NwLnR2L1RyYW5zY29kaW5nL3YxL2hscy81dGJzRDhWMG9renI2cFZKZEJLTzM5TGFrdmxOLU9Id3ViZVNaNDNyR3p2RG4tR25oQldfaXhJbDdJT2pNVXotcE9CbS1rTkYtcTFMQ2RpXzY3b1Jzdy9ub25fdHJhbnNjb2RlL2FwLXNvdXRoZWFzdC0yL3BlcmlzY29wZS1yZXBsYXktZGlyZWN0LXByb2QtYXAtc291dGhlYXN0LTItcHJpdmF0ZS9zdF9tYXN0ZXJfZHluYW1pY19oaWdobGF0ZW5jeS5tM3U4P3R5cGU9bGl2ZQ==",
                "url_type": 1,
                "user_agent": "HDPlayer/3.5.47 (Linux;Android 12) ExoPlayerLib/2.14.1",
                "referer": ""
            }
        ]
    },
    {
        "id": 12,
        "name": "Bein XTRA 2",
        "logo": "https://i.imgur.com/X8JGDL9.png",
        "is_hide": 0,
        "priority": 0,
        "streams": [
            {
                "name": "Multi",
                "url": "https://x7.yacinetvkora.com/live/tw.m3u8?s=aHR0cHM6Ly9wcm9kLWZhc3RseS1ldS1jZW50cmFsLTEudmlkZW8ucHNjcC50di9UcmFuc2NvZGluZy92MS9obHMvSWprUVVOLTNTOFZlMHlKV011aDdoN2ZMOERNUGNTZWY2dG5vY0FyM0FsTjNYb0NNcEN5UEVaOVk3YnBJM0tlRHQzOXdJdjBtSWhFSnZ3djYxWVpZeFEvbm9uX3RyYW5zY29kZS9ldS1jZW50cmFsLTEvcGVyaXNjb3BlLXJlcGxheS1kaXJlY3QtcHJvZC1ldS1jZW50cmFsLTEtcHJpdmF0ZS9zdF9tYXN0ZXJfZHluYW1pY19oaWdobGF0ZW5jeS5tM3U4P3R5cGU9bGl2ZQ==",
                "url_type": 1,
                "user_agent": "HDPlayer/3.5.47 (Linux;Android 12) ExoPlayerLib/2.14.1",
                "referer": ""
            },
            {
                "name": "Multi II",
                "url": "https://x7.yacinetvkora.com/live/tw.m3u8?s=aHR0cHM6Ly9wcm9kLWZhc3RseS1ldS13ZXN0LTEudmlkZW8ucHNjcC50di9UcmFuc2NvZGluZy92MS9obHMvWGlrWTU5RHZCYmw2Uy04cnJHUVlxYXVxN1R0dEdMS2ZiS250OXhMMTJuVVFweWtTeWxYTWl3MndaakR0S0hfZnp1R29hdWJyOVpBdXBaX1VCZjJUZncvbm9uX3RyYW5zY29kZS9ldS13ZXN0LTEvcGVyaXNjb3BlLXJlcGxheS1kaXJlY3QtcHJvZC1ldS13ZXN0LTEtcHJpdmF0ZS9zdF9tYXN0ZXJfZHluYW1pY19oaWdobGF0ZW5jeS5tM3U4P3R5cGU9bGl2ZQ==",
                "url_type": 1,
                "user_agent": "HDPlayer/3.5.47 (Linux;Android 12) ExoPlayerLib/2.14.1",
                "referer": ""
            }
        ]
    }
]
